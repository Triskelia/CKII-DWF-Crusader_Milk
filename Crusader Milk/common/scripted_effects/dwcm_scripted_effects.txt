dwcm_get_lacteria_test_subject = {
	if = { # We check if our last test subject is still available
		limit = {
			event_target:dwcm_lacteria_test_subject = { 
				dwcm_is_potential_hucow = yes
			} 
		}
	}
	else_if = { # Otherwise, we check to see if we've another subject we can use
		limit = {
			any_courtier = {
				dwcm_is_potential_hucow = yes
				ai = yes #we don't want the player being pulled into these events against their will
			}
		}
		#If there is, we then grab one for the event
		any_courtier = {
			limit = {
				dwcm_is_potential_hucow = yes
				ai = yes
			}
			save_event_target_as = dwcm_lacteria_test_subject
		}
	}
}

# Character
dwcm_become_hucow = { # [Modder_friendly] Make the character a hucow and initialize her variables
	if = {
		limit = { NOT = { trait = hucow } }
		add_trait = hucow
	}
	if = { # We initialize the hucow caracteristics if they aren't already (ie. if trait was added with console command)
		limit = { 
			NOT = { has_character_flag = dwcm_hucow_variables_initialized }
		}
		hidden_tooltip = {
			set_variable = { which = dwcm_milk_quantity_CURRENT value = 0 }
			set_variable = { which = dwcm_tracker_milk_produced value = 0 }
			set_variable = { which = dwcm_tracker_time_milked value = 0 }
			# set_variable = { which = dwcm_milk_capacity_MODIFIER_hardcoded value = 0 }
			# set_variable = { which = dwcm_milk_capacity_MODIFIER value = 0 }
			set_variable = { which = dwcm_milk_production_MULTIPLIER value = 1 }
			
			add_character_modifier = {
				name = dwcm_milk_capacity_counter
				duration = -1
			}
			set_character_flag = dwcm_hucow_variables_initialized
		}
	}
	dwcm_update_milk_variables = yes
}

#
# Hucow caracteristics calculations (Milk capacity, production rate...)
#

# Character
dwcm_increase_current_milk_quantity = { # [Modder_friendly] Increase milk quantity by one tick (dwcm_milk_production_rate_TOTAL)
	if = {
		limit = { NOT = { check_variable = { which = dwcm_milk_quantity_CURRENT which = dwcm_milk_capacity_TOTAL } } }
		dwcm_update_milk_variables = yes
		change_variable = { which = dwcm_milk_quantity_CURRENT which = dwcm_milk_production_rate_TOTAL }
		if = { # If milk quantity is greater than milk capacity, we cap it and add engarged breasts
			limit = { check_variable = { which = dwcm_milk_quantity_CURRENT which = dwcm_milk_capacity_TOTAL } }
			hidden_tooltip = { set_variable = { which = dwcm_milk_quantity_CURRENT which = dwcm_milk_capacity_TOTAL } }
			character_event = { id = DWCMMilk.050 }
		}
	}
	dwcm_update_divided_milk_quantities = yes
}

# Character
dwcm_update_milk_variables = { # [Modder_friendly] Update most milk related variables
	hidden_tooltip = {
		dwcm_update_divided_milk_quantities = yes
		dwcm_update_milk_capacity_raw = yes
		dwcm_update_milk_capacity_TOTAL= yes
		dwcm_update_milk_production_rate_raw = yes
		dwcm_update_milk_production_rate_TOTAL = yes
	}
}

# Character
dwcm_update_divided_milk_quantities = {
	hidden_tooltip = {
		set_variable = { which = dwcm_milk_quantity_half which = dwcm_milk_quantity_CURRENT }
		divide_variable = { which = dwcm_milk_quantity_half value = 2 }
		set_variable = { which = dwcm_milk_quantity_third which = dwcm_milk_quantity_CURRENT }
		divide_variable = { which = dwcm_milk_quantity_third value = 3 }
		set_variable = { which = dwcm_milk_quantity_quarter which = dwcm_milk_quantity_CURRENT }
		divide_variable = { which = dwcm_milk_quantity_quarter value = 4 }
	}
}

# Character; Should be hidden
dwcm_update_milk_capacity_raw = { # Raw Milk Capacity (quantity of milk a hucow can store in her breasts. Without other modifiers)
#TODO Add notification when it changes
	trigger_switch = {
		on_trigger = trait
		gigantic_tits = { set_variable = { which = dwcm_milk_capacity_raw value = 3.5 } }
		enormous_tits = { set_variable = { which = dwcm_milk_capacity_raw value = 3 } }
		huge_tits = { set_variable = { which = dwcm_milk_capacity_raw value = 2.5 } }
		big_tits = { set_variable = { which = dwcm_milk_capacity_raw value = 2 } }
		regular_tits = { set_variable = { which = dwcm_milk_capacity_raw value = 1.5 } }
		small_tits = { set_variable = { which = dwcm_milk_capacity_raw value = 1 } }
		tiny_tits = { set_variable = { which = dwcm_milk_capacity_raw value = 0.5 } }
	}
}

# Character; Should be hidden
dwcm_update_milk_capacity_MODIFIER_hardcoded = {
	set_variable = { which = dwcm_milk_capacity_MODIFIER_hardcoded value = 0 }
	# Buffs
	#TODO Add buffs for pregnancy (vanilla, tentacle, + check DWF)
	if = {
		limit = { trait = is_fat }
		change_variable = { which = dwcm_milk_capacity_MODIFIER_hardcoded value = 2 }
	}
	if = {
		limit = { trait = giant }
		change_variable = { which = dwcm_milk_capacity_MODIFIER_hardcoded value = 1 }
	}
	if = {
		limit = { 
			OR = {
				trait = sturdy
				trait = robust
				trait = strong
			}
		}
		change_variable = { which = dwcm_milk_capacity_MODIFIER_hardcoded value = 0.5 }
	}

	# Debuffs
	if = {
		limit = { 
			OR = {
				trait = feeble
				trait = weak
		 	}
		}
		subtract_variable = { which = dwcm_milk_capacity_MODIFIER_hardcoded value = 0.5 }
	}
	if = {
		limit = { trait = dwarf	}
		subtract_variable = { which = dwcm_milk_capacity_MODIFIER_hardcoded value = 1 }
	}
	if = { 
		limit = { trait = is_malnourished } 
		subtract_variable = { which = dwcm_milk_capacity_MODIFIER_hardcoded value = 2 }
	}
}

# Character; Should be hidden
dwcm_update_milk_capacity_TOTAL = { # Actual Milk Capacity (including potential modifiers)
	set_variable = { which = dwcm_milk_capacity_TOTAL which = dwcm_milk_capacity_raw }
	dwcm_update_milk_capacity_MODIFIER_hardcoded = yes
	change_variable = { which = dwcm_milk_capacity_TOTAL which = dwcm_milk_capacity_MODIFIER_hardcoded } # Modifier added by this mod (probably from traits, buildings or character flags)
	change_variable = { which = dwcm_milk_capacity_TOTAL which = dwcm_milk_capacity_MODIFIER } # Other modifiers, this variable can be changed directly (Only use change_variable, and if needed, add an event to substract it when the effect wears off. Or vice-versa. It is also advised to use dwcm_update_milk_variables after)
	if = { # We make sure that the hucow has at least a milk capacity of 0.25
		limit = { NOT = { check_variable = { which = dwcm_milk_capacity_TOTAL value = 0.24 } } }
		set_variable = { which = dwcm_milk_capacity_TOTAL value = 0.25 }
	}
}

# Character; Should be hidden
dwcm_update_milk_production_rate_raw = { # Raw Milk Production Rate (Quantity of milk produced each tick (about 6 months)).
#TODO Add notification when it changes
	trigger_switch = {
		on_trigger = trait
		gigantic_tits = { set_variable = { which = dwcm_milk_production_rate_raw value = 0.08 } }
		enormous_tits = { set_variable = { which = dwcm_milk_production_rate_raw value = 0.07 } }
		huge_tits = { set_variable = { which = dwcm_milk_production_rate_raw value = 0.06 } }
		big_tits = { set_variable = { which = dwcm_milk_production_rate_raw value = 0.05 } }
		regular_tits = { set_variable = { which = dwcm_milk_production_rate_raw value = 0.04 } }
		small_tits = { set_variable = { which = dwcm_milk_production_rate_raw value = 0.03 } }
		tiny_tits = { set_variable = { which = dwcm_milk_production_rate_raw value = 0.02 } }
	}
}

# Character; Should be hidden
dwcm_update_milk_production_rate_TOTAL = { # Actual Production Rate (after multiplier being applied)
	set_variable = { which = dwcm_milk_production_rate_TOTAL which = dwcm_milk_production_rate_raw }
	multiply_variable = { which = dwcm_milk_production_rate_TOTAL which = dwcm_milk_production_MULTIPLIER }
}